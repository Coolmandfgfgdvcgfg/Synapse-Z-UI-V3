<Application x:Class="Synapse_Z_V3.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Synapse_Z_V3"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="SettingBorderStyle" TargetType="Border">
            <Setter Property="Width" Value="724"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Background" Value="#FF2B2B2B"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="0.5"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="2"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TabControl Style -->
        <Style TargetType="TabControl">
            <Setter Property="Background" Value="#FF888888"/>
            <Setter Property="Padding" Value="0"/>
        </Style>

        <!-- Close Button Style -->
        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <TextBlock Text="x" FontSize="17" Foreground="#FF9D9D9D" Margin="0,-4,0,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TabItem Style with Rounding, Size, Image Icon, Brighter Selected Tab -->
        <Style TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid>
                            <Border x:Name="TabBorder" 
                                    Background="#FF333333"
                                    CornerRadius="10"
                                    Padding="10,5" 
                                    Margin="2"
                                    BorderBrush="Transparent" 
                                    BorderThickness="1">
                                <DockPanel LastChildFill="True">
                                    <!-- Image Icon Left of Text -->
                                    <Image Source="Images/ast.png" 
                                           Width="10" Height="10" 
                                           Margin="0,0,5,0" 
                                           VerticalAlignment="Center" UseLayoutRounding="True" SnapsToDevicePixels="True"/>

                                    <!-- Tab Header Text -->
                                    <ContentPresenter x:Name="ContentSite" 
                                                      VerticalAlignment="Center" 
                                                      ContentSource="Header"
                                                      TextElement.Foreground="White"/>

                                    <!-- Close Button -->
                                    <Button Content="×" 
                                            Width="20" 
                                            Height="20"
                                    
                                            Style="{StaticResource CloseButtonStyle}" 
                                            VerticalAlignment="Center" 
                                            HorizontalAlignment="Right" 
                                            Margin="5,0,0,0"
                                            Background="#FF333333"
                                            BorderBrush="Transparent"/>
                                </DockPanel>
                            </Border>
                        </Grid>

                        <!-- Trigger to Highlight Selected Tab -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="TabBorder" Property="Background" Value="#FF555555"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- White Text, Rounded Tabs -->
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="MinWidth" Value="100"/>
        </Style>


        <!-- Close Button Style to Blend with Tab Background -->


        <Style x:Key="TabToggleButtonStyle2" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="3" />
                            </Grid.Effect>

                            <!-- VisualStateManager for Animations -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" 
                                                     Storyboard.TargetProperty="Opacity" 
                                                     To="1" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" 
                                                     Storyboard.TargetProperty="Opacity" 
                                                     To="0" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <!-- Main Background -->
                            <Rectangle Fill="#FF252525" RadiusX="4" RadiusY="4" />

                            <!-- Content Presenter -->
                            <ContentPresenter 
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Center"/>

                            <!-- Rounded Border with Opacity for Fading Effect -->
                            <Rectangle x:Name="border" Stroke="#ADD8E6" StrokeThickness="2" RadiusX="4" RadiusY="4" 
                               Opacity="0" Fill="Transparent"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>


        <Style x:Key="PlusButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="35"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Background" Value="#FF2B2B2B"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="0.25"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Yu Gothic UI"/>
            <Setter Property="Foreground" Value="#FF9D9D9D"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">


                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>


        <Style x:Key="TabButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>

        <Style x:Key="WindowButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center"/>
                            <Rectangle x:Name="HoverVisual" 
                                       Fill="Gray" 
                                       Opacity="0.3" 
                                       Visibility="Collapsed" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="HoverVisual" Property="Visibility" Value="Visible"/>
                                <Setter Property="BorderBrush" Value="Gray"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="HoverVisual" Property="Visibility" Value="Collapsed"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="HoverVisual" Property="Fill" Value="LightGray"/>
                                <Setter TargetName="HoverVisual" Property="Opacity" Value="0.5"/>
                                <Setter Property="BorderBrush" Value="#3b3b3a"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="False">
                                <Setter TargetName="HoverVisual" Property="Fill" Value="Gray"/>
                                <Setter TargetName="HoverVisual" Property="Opacity" Value="0.3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>
        <Style x:Key="CustomCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Yu Gothic UI"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="1"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- Text Content on the left -->
                                <StackPanel Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Left">
                                    <TextBlock Text="{TemplateBinding Content}" 
                                       VerticalAlignment="Center" 
                                       HorizontalAlignment="Left" 
                                       Foreground="{TemplateBinding Foreground}"/>
                                    <TextBlock Text="{TemplateBinding Tag}"
                                       FontSize="14"
                                       Foreground="LightGray"
                                       VerticalAlignment="Top" 
                                       Margin="0,5,0,0"/>
                                </StackPanel>

                                <!-- Checkbox on the right -->
                                <ToggleButton Grid.Column="1"
                                      Width="45" Height="45"
                                      IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                      Background="Transparent"
                                      BorderBrush="White"
                                      BorderThickness="1"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch" Cursor="Hand">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Grid Width="28" Height="28">
                                                            <!-- Border for the checkbox -->
                                                            <Border x:Name="Border"
                                                            Background="Transparent"
                                                            BorderBrush="White"
                                                            BorderThickness="1"
                                                            CornerRadius="2"/>
                                                            <!-- Checkmark that appears when checked -->
                                                            <Path x:Name="CheckMark"
                                                          Data="M 0 6 L 4 10 L 10 0"
                                                          Stroke="Black"
                                                          StrokeThickness="2"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          Visibility="Collapsed"/>
                                                            <!-- Visual State Manager for animations -->
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal">
                                                                        <Storyboard>
                                                                            <ColorAnimation Storyboard.TargetName="Border"
                                                                                    Storyboard.TargetProperty="(Border.Background).Color"
                                                                                    To="Transparent"
                                                                                    Duration="0:0:0.2"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="MouseOver">
                                                                        <Storyboard>
                                                                            <ColorAnimation Storyboard.TargetName="Border"
                                                                                    Storyboard.TargetProperty="(Border.Background).Color"
                                                                                    To="#a7bdc4" 
                                                                                Duration="0:0:0.2"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Checked">
                                                                        <Storyboard>
                                                                            <ColorAnimation Storyboard.TargetName="Border"
                                                                                    Storyboard.TargetProperty="(Border.Background).Color"
                                                                                    To="#ADD8E6" 
                                                                                Duration="0:0:0.2"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>

                            <!-- Separator line -->
                            <Border Grid.Row="1" Background="LightGray" Height="1" Margin="0,10,0,0" HorizontalAlignment="Stretch"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Updated MainButtonStyle with rounded corners -->
        <Style x:Key="MainButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="114"/>
            <Setter Property="Height" Value="31"/>
            <Setter Property="Background" Value="#FF2B2B2B"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="0.25"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Yu Gothic UI"/>
            <Setter Property="Foreground" Value="#FF9D9D9D"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="5">
                            <!-- Ensure rounded corners -->
                            <Grid>
                                <ContentPresenter 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"/>
                                <Border x:Name="HoverVisual" 
                                        CornerRadius="5"  
                                    Background="#FF2B2B2B"
                                        Opacity="0.3" 
                                        Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="HoverVisual" Property="Visibility" Value="Visible"/>
                                <Setter Property="BorderBrush" Value="Gray"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="HoverVisual" Property="Visibility" Value="Collapsed"/>
                                <Setter Property="BorderBrush" Value="Gray"/>
                                <Setter Property="BorderThickness" Value="0.5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="HoverVisual" Property="Background" Value="LightGray"/>
                                <Setter TargetName="HoverVisual" Property="Opacity" Value="0.5"/>
                                <Setter Property="BorderBrush" Value="#3b3b3a"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="False">
                                <Setter TargetName="HoverVisual" Property="Background" Value="Gray"/>
                                <Setter TargetName="HoverVisual" Property="Opacity" Value="0.3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>
        <Style x:Key="MainToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Width" Value="114"/>
            <Setter Property="Height" Value="31"/>
            <Setter Property="Background" Value="#FF2B2B2B"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="0.5"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Yu Gothic UI"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="5">
                            <Grid>
                                <ContentPresenter 
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center"/>
                                <Border x:Name="HoverVisual" 
                                CornerRadius="5"  
                                Background="Gray" 
                                Opacity="0.3" 
                                Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="HoverVisual" Property="Visibility" Value="Visible"/>
                                <Setter Property="BorderBrush" Value="Gray"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="HoverVisual" Property="Visibility" Value="Collapsed"/>
                                <Setter Property="BorderBrush" Value="Gray"/>
                                <Setter Property="BorderThickness" Value="0.5"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#FF4CAF50"/>
                                <!-- Bright green for checked state -->
                                <Setter Property="BorderBrush" Value="#FF4CAF50"/>
                                <!-- Match border color with background -->
                                <Setter Property="Foreground" Value="White"/>
                                <!-- Keep text white -->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="HoverVisual" Property="Background" Value="LightGray"/>
                                <Setter TargetName="HoverVisual" Property="Opacity" Value="0.5"/>
                                <Setter Property="BorderBrush" Value="#3B3B3A"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="False">
                                <Setter TargetName="HoverVisual" Property="Background" Value="Gray"/>
                                <Setter TargetName="HoverVisual" Property="Opacity" Value="0.3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>


        <Style x:Key="CustomListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="10,0,0,0"/>
            <!-- Added left margin -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF3A3A3A"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="CustomTabStyle" TargetType="TabItem">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="8"
                        Padding="10,5">
                            <ContentPresenter 
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Center"
                        ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Hover effect -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                            <!-- Selected effect -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#FF2B2B2B"/>
                                <Setter Property="BorderBrush" Value="White"/>
                            </Trigger>
                            <!-- Focus effect -->
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="Yellow"/>
                                <!-- Example focus color -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
